add2 <- function(x,y){
x + y
}
add2(3,5)
above <- function(x,n){
use <- x>n
x[use]
}
x <-1:20
above(x,12)
above(x)
above <- function(x,n=10){
use <- x>n
x[use]
}
above(x)
abovesub <- function(x,n){
subset(x, x>n)
}
abovesub(x,15)
columnmean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in nc{
means[i] <- mean(x[,i])
}
means
}
columnmean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in nc){
means[i] <- mean(x[,i])
}
means
}
ls
debug(ls)
ls
?debug
undebug(ls)
ls
getwd()
ls
undebug(ls)
ls
?undebug
isdebugged(ls)
undebug(ls)
ls
ls -l
?run
undebug(ls)
makeVector(1:10)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(1:10)
cachemean(1:10)
source(cachemean.R)
source('cachemean.R')
getwd()
setwd("D:/Personal/Data_science/Coursera/JH_univ/course_2_R_programming/week3/hw")
source('cachemean.R')
makeVector(x=1:10)
mean(x)
x = 1:10
makeVector(x)
mean(x)
x <- rnorm(100, 10, 10)
makeCacheMatrix(x)
setwd("D:/Personal/Data_science/Coursera/JH_univ/course_2_R_programming/week3/hw/ProgrammingAssignment2")
source('cachematrix.R')
makeCacheMatrix(x)
solve(x)
size(x)
length(x)
str(x)
x <- rnorm(100, 10, 10)
length(x)
x <- [1,2,3;4,5,6;7,8,9]
x <- c(1,2,3);c(4,5,6);c(7,8,9)
x
x
x <- as.matrix(rnorm(100,10,10))
x
?rnorm
?as.matrix
x <- as.matrix(rnorm(100),10,10)
length(x)
x
x <- as.matrix(rnorm(100),nrow = 10, ncol = 10)
x
x <- matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3)
makeCacheMatrix(x)
solve(x)
x <- matrix(c(1,22,13,41,51,6,67,82,94),nrow=3,ncol=3)
makeCacheMatrix(x)
solve(x)
solve(x)
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
set.seed(1)
rpois(5,2)
?dnorm
?pnorm
?qnorm
?rnorm
?ppois
set.seed(10)
x <- rbinom(10,10,0.5)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x + e
plot(x,y)
?rbinom
